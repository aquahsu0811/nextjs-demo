{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Project\\\\React-udmey\\\\06-onwards-to-a-bigger-project-starting-project\\\\pages\\\\[meetupId]\\\\index.js\";\nimport Head from 'next/head';\nimport { MongoClient, ObjectId } from 'mongodb';\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\n\nfunction MeetupDetails(props) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Meetups\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: \"Browse a list of highly active React meetups!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      image: props.meetupData.image,\n      title: props.meetupData.title,\n      address: props.meetupData.address,\n      description: props.meetupData.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n;\nexport async function getStaticPaths() {\n  let client;\n\n  try {\n    client = await MongoClient.connect('mongodb+srv://AquaAdmin:dUYonbpI2yOr2CjW@cluster0.6i4zscc.mongodb.net/meetups?retryWrites=true&w=majority');\n  } catch (error) {\n    console.log(error);\n    return;\n  }\n\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  console.log(\"result\", meetups);\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n}\n;\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId;\n  let client;\n\n  try {\n    client = await MongoClient.connect('mongodb+srv://AquaAdmin:dUYonbpI2yOr2CjW@cluster0.6i4zscc.mongodb.net/meetups?retryWrites=true&w=majority');\n  } catch (error) {\n    console.log(error);\n    return;\n  }\n\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const selectedMeetup = await meetupsCollection.findOne({\n    _id: ObjectId(meetupId)\n  });\n  client.close();\n  return {\n    props: {\n      meetupData: {\n        image: selectedMeetup.data.image,\n        title: selectedMeetup.data.title,\n        address: selectedMeetup.data.address,\n        description: selectedMeetup.data.description\n      }\n    }\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["D:/Project/React-udmey/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js"],"names":["Head","MongoClient","ObjectId","MeetupDetail","MeetupDetails","props","meetupData","image","title","address","description","getStaticPaths","client","connect","error","console","log","db","meetupsCollection","collection","meetups","find","_id","toArray","close","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","selectedMeetup","findOne","data"],"mappings":"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","sourcesContent":["import Head from 'next/head';\r\nimport {MongoClient, ObjectId } from 'mongodb'\r\n\r\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\r\n\r\nfunction MeetupDetails(props){\r\n  return(\r\n    <>\r\n      <Head>\r\n        <title>Meetups</title>\r\n        <meta name=\"description\" content=\"Browse a list of highly active React meetups!\" />\r\n      </Head>\r\n      <MeetupDetail \r\n        image= {props.meetupData.image}\r\n        title= {props.meetupData.title}\r\n        address= {props.meetupData.address}\r\n        description= {props.meetupData.description}\r\n      />\r\n    </>\r\n  )\r\n};\r\n\r\nexport async function getStaticPaths(){\r\n\r\n  let client;\r\n  try {\r\n    client = await MongoClient.connect(\r\n      'mongodb+srv://AquaAdmin:dUYonbpI2yOr2CjW@cluster0.6i4zscc.mongodb.net/meetups?retryWrites=true&w=majority'\r\n    );\r\n  } catch (error){\r\n    \r\n    console.log(error);\r\n    return;\r\n  }\r\n\r\n  const db = client.db();\r\n\r\n  const meetupsCollection = db.collection('meetups');\r\n\r\n  const meetups = await meetupsCollection.find({}, {_id: 1}).toArray();\r\n\r\n  console.log(\"result\", meetups);\r\n\r\n  client.close();\r\n\r\n  return{\r\n    fallback: false,\r\n    paths: meetups.map((meetup) => ({\r\n      params: { meetupId: meetup._id.toString() },\r\n    })),\r\n  }\r\n};\r\n\r\nexport async function getStaticProps(context){\r\n  const meetupId = context.params.meetupId;\r\n\r\n  let client;\r\n  try {\r\n    client = await MongoClient.connect(\r\n      'mongodb+srv://AquaAdmin:dUYonbpI2yOr2CjW@cluster0.6i4zscc.mongodb.net/meetups?retryWrites=true&w=majority'\r\n    );\r\n  } catch (error){\r\n    \r\n    console.log(error);\r\n    return;\r\n  }\r\n\r\n  const db = client.db();\r\n\r\n  const meetupsCollection = db.collection('meetups');\r\n\r\n  const selectedMeetup = await meetupsCollection.findOne({\r\n    _id: ObjectId(meetupId),\r\n  });\r\n\r\n  client.close();\r\n\r\n  return{\r\n    props:{\r\n      meetupData:{\r\n        image: selectedMeetup.data.image,\r\n        title: selectedMeetup.data.title,\r\n        address: selectedMeetup.data.address,\r\n        description: selectedMeetup.data.description\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default MeetupDetails;\r\n\r\n"]},"metadata":{},"sourceType":"module"}